02-feb-2022
lots of time spend on configuration
lots of inbuild support 
Spring has the followed key modules:
core containers:provide core modules
Data Access/integration:JDBC and ORM data access approaches in spring app
web: these modules provide support to implement web app
others:Spring also provides few other modules such as Test for testing spring app
AOP follows Decorator pattern

use constructor injection for mandatory dependencies and setter injection for optional dependencies in spring boot app

to create a stateless bean use the singelton scope and for a stateful bean choose the prototype scope.

use component scan for avoiding overburden to spring.  be specific about @componentScan("com.infosys.service")

SPRING REST:-
SOA expands to Service Oriented Architecture, is a software model designed for achieving communication among distributed application components, irrespective of the differences in terms of technology, platform, etc.,

The application component that requests for a service is the consumer and the one that renders the service is the producer.

SOA is an architecture that can help to build an enterprise application by availing the services/functionalities from different third-party entities without reinventing the existing functionalities.


A Web Service is a software system designed to support interoperable machine to machine interaction over a network.

Web Services
Web Services are used to exchange data between two incompatible applications

Web Application: meant for humans.

Benifits of WEB SERVICES
1)Interoperability: integrate and works with different systems irrepective of technology and platform.
2)Reusability: create reusable components.
3)Ease of use: saves cost, efforts and time
http://ftp.hp.com/pub/caps-softpaq/cmit/softpaq/CASLSetup.exe

Web Services are of two types:
1)SOAP (Simple Object Access Protocol) defines a very strongly typed messaging framework that relies heavily on XML and schemas. And, SOAP itself is a protocol (transported over HTTP, can also be carried over other transport layer protocol like SMTP/FTP, etc.) for developing SOAP-based APIs.


2)REST-REpresentational State Transfer is an architectural style for developing web services which uses HTTP for communication.

In REST, everything is a Resource (data/functionality/web page) that is uniquely identified by URI (Uniform Resource Identifier).

The resources of REST can be represented in many ways that include JSON, XML, HTML, etc.,

For example, if the URI, http://www.infy.com/employees/john, is hit using HTTP GET method, the server may respond back with John's details in JSON format.

{
    "name": "John",
    "Level": 5,
    "address":"Hyderbad",
    "phoneno":998765432
}
There are possibilities to expose John's details in XML format as well.

RESTful web services are fast, scalable and modifiable. 


RESTful Web services can be developed and consumed in Java using JAX-RS API or Spring REST.


Spring Web contains Web,MVC and WebSocket

Spring MVC framework is based on MVC and the front controller design patterns.

The core element of Spring MVC is the Dispatcher Servlet and, that is the Front Controller which provides an entry point for handling all the requests and forwards the same to the appropriate components. 

The Dispatcher Servlet interacts with handler mappings to determine which controller to execute upon user request. Same way, it consults view resolver to decide the view in which the response to be rendered.

For this, Spring 3.0 introduced @ResponseBody annotation. So, the methods of REST controllers that are annotated with @ResponseBody tells the DispatcherServlet that the result of execution need not to be mapped with a view.

@ResponseBody annotation automatically converts the response to a JSON string literal by applying serialization on the return value of the method.

In Spring 4.0, the @RestController annotation was introduced.

This annotation is a combination of @Controller and @ResponseBody.

This annotation when used on a REST controller class bounds all the values returned by controller methods to the response body.



Spring MVC: response is a View/Page by default
Spring REST:In Spring REST data is returned directly back to the client